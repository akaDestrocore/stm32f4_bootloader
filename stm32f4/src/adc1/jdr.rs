# [doc = "Register `JDR%s` reader"] pub type R = crate :: R < JdrSpec > ; # [doc = "Field `JDATA` reader - Injected data"] pub type JdataR = crate :: FieldReader < u16 > ; impl R { # [doc = "Bits 0:15 - Injected data"] # [inline (always)] pub fn jdata (& self) -> JdataR { JdataR :: new ((self . bits & 0xffff) as u16) } } # [doc = "injected data register x\n\nYou can [`read`](crate::Reg::read) this register and get [`jdr::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct JdrSpec ; impl crate :: RegisterSpec for JdrSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`jdr::R`](R) reader structure"] impl crate :: Readable for JdrSpec { } # [doc = "`reset()` method sets JDR%s to value 0"] impl crate :: Resettable for JdrSpec { }