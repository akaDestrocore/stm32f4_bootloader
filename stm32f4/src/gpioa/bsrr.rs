# [doc = "Register `BSRR` writer"] pub type W = crate :: W < BsrrSpec > ; # [doc = "Port x set pin %s\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum BitSet { # [doc = "1: Sets the corresponding ODRx bit"] Set = 1 , } impl From < BitSet > for bool { # [inline (always)] fn from (variant : BitSet) -> Self { variant as u8 != 0 } } # [doc = "Field `BS(0-15)` writer - Port x set pin %s"] pub type BsW < 'a , REG > = crate :: BitWriter < 'a , REG , BitSet > ; impl < 'a , REG > BsW < 'a , REG > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "Sets the corresponding ODRx bit"] # [inline (always)] pub fn set_ (self) -> & 'a mut crate :: W < REG > { self . variant (BitSet :: Set) } } # [doc = "Port x reset pin %s\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum BitReset { # [doc = "1: Resets the corresponding ODRx bit"] Reset = 1 , } impl From < BitReset > for bool { # [inline (always)] fn from (variant : BitReset) -> Self { variant as u8 != 0 } } # [doc = "Field `BR(0-15)` writer - Port x reset pin %s"] pub type BrW < 'a , REG > = crate :: BitWriter < 'a , REG , BitReset > ; impl < 'a , REG > BrW < 'a , REG > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "Resets the corresponding ODRx bit"] # [inline (always)] pub fn reset (self) -> & 'a mut crate :: W < REG > { self . variant (BitReset :: Reset) } } impl W { # [doc = "Port x set pin (0-15)"] # [doc = ""] # [doc = "<div class=\"warning\">`n` is number of field in register. `n == 0` corresponds to `BS0` field.</div>"] # [inline (always)] pub fn bs (& mut self , n : u8) -> BsW < BsrrSpec > { # [allow (clippy :: no_effect)] [() ; 16] [n as usize] ; BsW :: new (self , n) } # [doc = "Bit 0 - Port x set pin 0"] # [inline (always)] pub fn bs0 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 0) } # [doc = "Bit 1 - Port x set pin 1"] # [inline (always)] pub fn bs1 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 1) } # [doc = "Bit 2 - Port x set pin 2"] # [inline (always)] pub fn bs2 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 2) } # [doc = "Bit 3 - Port x set pin 3"] # [inline (always)] pub fn bs3 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 3) } # [doc = "Bit 4 - Port x set pin 4"] # [inline (always)] pub fn bs4 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 4) } # [doc = "Bit 5 - Port x set pin 5"] # [inline (always)] pub fn bs5 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 5) } # [doc = "Bit 6 - Port x set pin 6"] # [inline (always)] pub fn bs6 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 6) } # [doc = "Bit 7 - Port x set pin 7"] # [inline (always)] pub fn bs7 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 7) } # [doc = "Bit 8 - Port x set pin 8"] # [inline (always)] pub fn bs8 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 8) } # [doc = "Bit 9 - Port x set pin 9"] # [inline (always)] pub fn bs9 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 9) } # [doc = "Bit 10 - Port x set pin 10"] # [inline (always)] pub fn bs10 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 10) } # [doc = "Bit 11 - Port x set pin 11"] # [inline (always)] pub fn bs11 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 11) } # [doc = "Bit 12 - Port x set pin 12"] # [inline (always)] pub fn bs12 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 12) } # [doc = "Bit 13 - Port x set pin 13"] # [inline (always)] pub fn bs13 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 13) } # [doc = "Bit 14 - Port x set pin 14"] # [inline (always)] pub fn bs14 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 14) } # [doc = "Bit 15 - Port x set pin 15"] # [inline (always)] pub fn bs15 (& mut self) -> BsW < BsrrSpec > { BsW :: new (self , 15) } # [doc = "Port x reset pin (0-15)"] # [doc = ""] # [doc = "<div class=\"warning\">`n` is number of field in register. `n == 0` corresponds to `BR0` field.</div>"] # [inline (always)] pub fn br (& mut self , n : u8) -> BrW < BsrrSpec > { # [allow (clippy :: no_effect)] [() ; 16] [n as usize] ; BrW :: new (self , n + 16) } # [doc = "Bit 16 - Port x reset pin 0"] # [inline (always)] pub fn br0 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 16) } # [doc = "Bit 17 - Port x reset pin 1"] # [inline (always)] pub fn br1 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 17) } # [doc = "Bit 18 - Port x reset pin 2"] # [inline (always)] pub fn br2 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 18) } # [doc = "Bit 19 - Port x reset pin 3"] # [inline (always)] pub fn br3 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 19) } # [doc = "Bit 20 - Port x reset pin 4"] # [inline (always)] pub fn br4 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 20) } # [doc = "Bit 21 - Port x reset pin 5"] # [inline (always)] pub fn br5 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 21) } # [doc = "Bit 22 - Port x reset pin 6"] # [inline (always)] pub fn br6 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 22) } # [doc = "Bit 23 - Port x reset pin 7"] # [inline (always)] pub fn br7 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 23) } # [doc = "Bit 24 - Port x reset pin 8"] # [inline (always)] pub fn br8 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 24) } # [doc = "Bit 25 - Port x reset pin 9"] # [inline (always)] pub fn br9 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 25) } # [doc = "Bit 26 - Port x reset pin 10"] # [inline (always)] pub fn br10 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 26) } # [doc = "Bit 27 - Port x reset pin 11"] # [inline (always)] pub fn br11 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 27) } # [doc = "Bit 28 - Port x reset pin 12"] # [inline (always)] pub fn br12 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 28) } # [doc = "Bit 29 - Port x reset pin 13"] # [inline (always)] pub fn br13 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 29) } # [doc = "Bit 30 - Port x reset pin 14"] # [inline (always)] pub fn br14 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 30) } # [doc = "Bit 31 - Port x reset pin 15"] # [inline (always)] pub fn br15 (& mut self) -> BrW < BsrrSpec > { BrW :: new (self , 31) } } # [doc = "GPIO port bit set/reset register\n\nYou can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`bsrr::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct BsrrSpec ; impl crate :: RegisterSpec for BsrrSpec { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`bsrr::W`](W) writer structure"] impl crate :: Writable for BsrrSpec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets BSRR to value 0"] impl crate :: Resettable for BsrrSpec { }