# [doc = "Register `TXFSTS` reader"] pub type R = crate :: R < TxfstsSpec > ; # [doc = "Field `INEPTFSAV` reader - IN endpoint TxFIFO space available"] pub type IneptfsavR = crate :: FieldReader < u16 > ; impl R { # [doc = "Bits 0:15 - IN endpoint TxFIFO space available"] # [inline (always)] pub fn ineptfsav (& self) -> IneptfsavR { IneptfsavR :: new ((self . bits & 0xffff) as u16) } } # [doc = "OTG_FS device IN endpoint transmit FIFO status register\n\nYou can [`read`](crate::Reg::read) this register and get [`txfsts::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct TxfstsSpec ; impl crate :: RegisterSpec for TxfstsSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`txfsts::R`](R) reader structure"] impl crate :: Readable for TxfstsSpec { } # [doc = "`reset()` method sets TXFSTS to value 0"] impl crate :: Resettable for TxfstsSpec { }