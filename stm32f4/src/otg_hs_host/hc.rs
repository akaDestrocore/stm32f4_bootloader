# [repr (C)] # [doc = "Host channel"] # [doc (alias = "HC")] pub struct Hc { char : Char , splt : Splt , int : Int , intmsk : Intmsk , tsiz : Tsiz , dma : Dma , } impl Hc { # [doc = "0x00 - OTG_HS host channel-0 characteristics register"] # [inline (always)] pub const fn char (& self) -> & Char { & self . char } # [doc = "0x04 - OTG_HS host channel-0 split control register"] # [inline (always)] pub const fn splt (& self) -> & Splt { & self . splt } # [doc = "0x08 - OTG_HS host channel-11 interrupt register"] # [inline (always)] pub const fn int (& self) -> & Int { & self . int } # [doc = "0x0c - OTG_HS host channel-11 interrupt mask register"] # [inline (always)] pub const fn intmsk (& self) -> & Intmsk { & self . intmsk } # [doc = "0x10 - OTG_HS host channel-11 transfer size register"] # [inline (always)] pub const fn tsiz (& self) -> & Tsiz { & self . tsiz } # [doc = "0x14 - OTG_HS host channel-0 DMA address register"] # [inline (always)] pub const fn dma (& self) -> & Dma { & self . dma } } # [doc = "CHAR (rw) register accessor: OTG_HS host channel-0 characteristics register\n\nYou can [`read`](crate::Reg::read) this register and get [`char::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`char::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@char`] module"] # [doc (alias = "CHAR")] pub type Char = crate :: Reg < char :: CharSpec > ; # [doc = "OTG_HS host channel-0 characteristics register"] pub mod char ; # [doc = "SPLT (rw) register accessor: OTG_HS host channel-0 split control register\n\nYou can [`read`](crate::Reg::read) this register and get [`splt::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`splt::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@splt`] module"] # [doc (alias = "SPLT")] pub type Splt = crate :: Reg < splt :: SpltSpec > ; # [doc = "OTG_HS host channel-0 split control register"] pub mod splt ; # [doc = "INT (rw) register accessor: OTG_HS host channel-11 interrupt register\n\nYou can [`read`](crate::Reg::read) this register and get [`int::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`int::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@int`] module"] # [doc (alias = "INT")] pub type Int = crate :: Reg < int :: IntSpec > ; # [doc = "OTG_HS host channel-11 interrupt register"] pub mod int ; # [doc = "INTMSK (rw) register accessor: OTG_HS host channel-11 interrupt mask register\n\nYou can [`read`](crate::Reg::read) this register and get [`intmsk::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`intmsk::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@intmsk`] module"] # [doc (alias = "INTMSK")] pub type Intmsk = crate :: Reg < intmsk :: IntmskSpec > ; # [doc = "OTG_HS host channel-11 interrupt mask register"] pub mod intmsk ; # [doc = "TSIZ (rw) register accessor: OTG_HS host channel-11 transfer size register\n\nYou can [`read`](crate::Reg::read) this register and get [`tsiz::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`tsiz::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@tsiz`] module"] # [doc (alias = "TSIZ")] pub type Tsiz = crate :: Reg < tsiz :: TsizSpec > ; # [doc = "OTG_HS host channel-11 transfer size register"] pub mod tsiz ; # [doc = "DMA (rw) register accessor: OTG_HS host channel-0 DMA address register\n\nYou can [`read`](crate::Reg::read) this register and get [`dma::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`dma::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@dma`] module"] # [doc (alias = "DMA")] pub type Dma = crate :: Reg < dma :: DmaSpec > ; # [doc = "OTG_HS host channel-0 DMA address register"] pub mod dma ;