# [doc = "Register `KRR` writer"] pub type W = crate :: W < KrrSpec > ; # [doc = "Field `b` writer - b192"] pub type BW < 'a , REG > = crate :: FieldWriter < 'a , REG , 32 , u32 > ; impl W { # [doc = "Bits 0:31 - b192"] # [inline (always)] pub fn b (& mut self) -> BW < KrrSpec > { BW :: new (self , 0) } } # [doc = "key registers\n\nYou can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`krr::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct KrrSpec ; impl crate :: RegisterSpec for KrrSpec { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`krr::W`](W) writer structure"] impl crate :: Writable for KrrSpec { type Safety = crate :: Unsafe ; } # [doc = "`reset()` method sets KRR to value 0"] impl crate :: Resettable for KrrSpec { }