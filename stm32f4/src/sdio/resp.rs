# [doc = "Register `RESP%s` reader"] pub type R = crate :: R < RespSpec > ; # [doc = "Field `CARDSTATUS` reader - Status of a card, which is part of the received response"] pub type CardstatusR = crate :: FieldReader < u32 > ; impl R { # [doc = "Bits 0:31 - Status of a card, which is part of the received response"] # [inline (always)] pub fn cardstatus (& self) -> CardstatusR { CardstatusR :: new (self . bits) } } # [doc = "SDIO response %s register\n\nYou can [`read`](crate::Reg::read) this register and get [`resp::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct RespSpec ; impl crate :: RegisterSpec for RespSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`resp::R`](R) reader structure"] impl crate :: Readable for RespSpec { } # [doc = "`reset()` method sets RESP%s to value 0"] impl crate :: Resettable for RespSpec { }