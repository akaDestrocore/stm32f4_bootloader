# [repr (C)] # [doc = "CAN Transmit cluster"] # [doc (alias = "TX")] pub struct Tx { tir : Tir , tdtr : Tdtr , tdlr : Tdlr , tdhr : Tdhr , } impl Tx { # [doc = "0x00 - TX mailbox identifier register"] # [inline (always)] pub const fn tir (& self) -> & Tir { & self . tir } # [doc = "0x04 - mailbox data length control and time stamp register"] # [inline (always)] pub const fn tdtr (& self) -> & Tdtr { & self . tdtr } # [doc = "0x08 - mailbox data low register"] # [inline (always)] pub const fn tdlr (& self) -> & Tdlr { & self . tdlr } # [doc = "0x0c - mailbox data high register"] # [inline (always)] pub const fn tdhr (& self) -> & Tdhr { & self . tdhr } } # [doc = "TIR (rw) register accessor: TX mailbox identifier register\n\nYou can [`read`](crate::Reg::read) this register and get [`tir::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`tir::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@tir`] module"] # [doc (alias = "TIR")] pub type Tir = crate :: Reg < tir :: TirSpec > ; # [doc = "TX mailbox identifier register"] pub mod tir ; # [doc = "TDTR (rw) register accessor: mailbox data length control and time stamp register\n\nYou can [`read`](crate::Reg::read) this register and get [`tdtr::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`tdtr::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@tdtr`] module"] # [doc (alias = "TDTR")] pub type Tdtr = crate :: Reg < tdtr :: TdtrSpec > ; # [doc = "mailbox data length control and time stamp register"] pub mod tdtr ; # [doc = "TDLR (rw) register accessor: mailbox data low register\n\nYou can [`read`](crate::Reg::read) this register and get [`tdlr::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`tdlr::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@tdlr`] module"] # [doc (alias = "TDLR")] pub type Tdlr = crate :: Reg < tdlr :: TdlrSpec > ; # [doc = "mailbox data low register"] pub mod tdlr ; # [doc = "TDHR (rw) register accessor: mailbox data high register\n\nYou can [`read`](crate::Reg::read) this register and get [`tdhr::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`tdhr::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@tdhr`] module"] # [doc (alias = "TDHR")] pub type Tdhr = crate :: Reg < tdhr :: TdhrSpec > ; # [doc = "mailbox data high register"] pub mod tdhr ;