# [repr (C)] # [doc = "Register block"] pub struct RegisterBlock { idcode : Idcode , cr : Cr , apb1_fz : Apb1Fz , apb2_fz : Apb2Fz , } impl RegisterBlock { # [doc = "0x00 - IDCODE"] # [inline (always)] pub const fn idcode (& self) -> & Idcode { & self . idcode } # [doc = "0x04 - Control Register"] # [inline (always)] pub const fn cr (& self) -> & Cr { & self . cr } # [doc = "0x08 - Debug MCU APB1 Freeze registe"] # [inline (always)] pub const fn apb1_fz (& self) -> & Apb1Fz { & self . apb1_fz } # [doc = "0x0c - Debug MCU APB2 Freeze registe"] # [inline (always)] pub const fn apb2_fz (& self) -> & Apb2Fz { & self . apb2_fz } } # [doc = "IDCODE (r) register accessor: IDCODE\n\nYou can [`read`](crate::Reg::read) this register and get [`idcode::R`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@idcode`] module"] # [doc (alias = "IDCODE")] pub type Idcode = crate :: Reg < idcode :: IdcodeSpec > ; # [doc = "IDCODE"] pub mod idcode ; # [doc = "CR (rw) register accessor: Control Register\n\nYou can [`read`](crate::Reg::read) this register and get [`cr::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`cr::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cr`] module"] # [doc (alias = "CR")] pub type Cr = crate :: Reg < cr :: CrSpec > ; # [doc = "Control Register"] pub mod cr ; # [doc = "APB1_FZ (rw) register accessor: Debug MCU APB1 Freeze registe\n\nYou can [`read`](crate::Reg::read) this register and get [`apb1_fz::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`apb1_fz::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@apb1_fz`] module"] # [doc (alias = "APB1_FZ")] pub type Apb1Fz = crate :: Reg < apb1_fz :: Apb1FzSpec > ; # [doc = "Debug MCU APB1 Freeze registe"] pub mod apb1_fz ; # [doc = "APB2_FZ (rw) register accessor: Debug MCU APB2 Freeze registe\n\nYou can [`read`](crate::Reg::read) this register and get [`apb2_fz::R`]. You can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`apb2_fz::W`]. You can also [`modify`](crate::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@apb2_fz`] module"] # [doc (alias = "APB2_FZ")] pub type Apb2Fz = crate :: Reg < apb2_fz :: Apb2FzSpec > ; # [doc = "Debug MCU APB2 Freeze registe"] pub mod apb2_fz ;