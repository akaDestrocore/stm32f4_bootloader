# [doc = "Register `PTPTSSR` reader"] pub type R = crate :: R < PtptssrSpec > ; # [doc = "Field `TSSO` reader - TSSO"] pub type TssoR = crate :: BitReader ; # [doc = "Field `TSTTR` reader - TSTTR"] pub type TsttrR = crate :: BitReader ; impl R { # [doc = "Bit 0 - TSSO"] # [inline (always)] pub fn tsso (& self) -> TssoR { TssoR :: new ((self . bits & 1) != 0) } # [doc = "Bit 1 - TSTTR"] # [inline (always)] pub fn tsttr (& self) -> TsttrR { TsttrR :: new (((self . bits >> 1) & 1) != 0) } } # [doc = "Ethernet PTP time stamp status register\n\nYou can [`read`](crate::Reg::read) this register and get [`ptptssr::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct PtptssrSpec ; impl crate :: RegisterSpec for PtptssrSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`ptptssr::R`](R) reader structure"] impl crate :: Readable for PtptssrSpec { } # [doc = "`reset()` method sets PTPTSSR to value 0"] impl crate :: Resettable for PtptssrSpec { }