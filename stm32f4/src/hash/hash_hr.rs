# [doc = "Register `HASH_HR%s` reader"] pub type R = crate :: R < HashHrSpec > ; # [doc = "Field `H` reader - H0"] pub type HR = crate :: FieldReader < u32 > ; impl R { # [doc = "Bits 0:31 - H0"] # [inline (always)] pub fn h (& self) -> HR { HR :: new (self . bits) } } # [doc = "HASH digest register %s\n\nYou can [`read`](crate::Reg::read) this register and get [`hash_hr::R`](R). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct HashHrSpec ; impl crate :: RegisterSpec for HashHrSpec { type Ux = u32 ; } # [doc = "`read()` method returns [`hash_hr::R`](R) reader structure"] impl crate :: Readable for HashHrSpec { } # [doc = "`reset()` method sets HASH_HR%s to value 0"] impl crate :: Resettable for HashHrSpec { }