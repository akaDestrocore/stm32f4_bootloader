# [repr (C)] # [doc = "Register block"] pub struct RegisterBlock { lisr : Lisr , hisr : Hisr , lifcr : Lifcr , hifcr : Hifcr , st : [St ; 8] , } impl RegisterBlock { # [doc = "0x00 - low interrupt status register"] # [inline (always)] pub const fn lisr (& self) -> & Lisr { & self . lisr } # [doc = "0x04 - high interrupt status register"] # [inline (always)] pub const fn hisr (& self) -> & Hisr { & self . hisr } # [doc = "0x08 - low interrupt flag clear register"] # [inline (always)] pub const fn lifcr (& self) -> & Lifcr { & self . lifcr } # [doc = "0x0c - high interrupt flag clear register"] # [inline (always)] pub const fn hifcr (& self) -> & Hifcr { & self . hifcr } # [doc = "0x10..0xd0 - Stream cluster: S?CR, S?NDTR, S?M0AR, S?M1AR and S?FCR registers"] # [inline (always)] pub const fn st (& self , n : usize) -> & St { & self . st [n] } # [doc = "Iterator for array of:"] # [doc = "0x10..0xd0 - Stream cluster: S?CR, S?NDTR, S?M0AR, S?M1AR and S?FCR registers"] # [inline (always)] pub fn st_iter (& self) -> impl Iterator < Item = & St > { self . st . iter () } } # [doc = "LISR (r) register accessor: low interrupt status register\n\nYou can [`read`](crate::Reg::read) this register and get [`lisr::R`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@lisr`] module"] # [doc (alias = "LISR")] pub type Lisr = crate :: Reg < lisr :: LisrSpec > ; # [doc = "low interrupt status register"] pub mod lisr ; # [doc = "HISR (r) register accessor: high interrupt status register\n\nYou can [`read`](crate::Reg::read) this register and get [`hisr::R`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@hisr`] module"] # [doc (alias = "HISR")] pub type Hisr = crate :: Reg < hisr :: HisrSpec > ; # [doc = "high interrupt status register"] pub mod hisr ; # [doc = "LIFCR (w) register accessor: low interrupt flag clear register\n\nYou can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`lifcr::W`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@lifcr`] module"] # [doc (alias = "LIFCR")] pub type Lifcr = crate :: Reg < lifcr :: LifcrSpec > ; # [doc = "low interrupt flag clear register"] pub mod lifcr ; # [doc = "HIFCR (w) register accessor: high interrupt flag clear register\n\nYou can [`reset`](crate::Reg::reset), [`write`](crate::Reg::write), [`write_with_zero`](crate::Reg::write_with_zero) this register using [`hifcr::W`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@hifcr`] module"] # [doc (alias = "HIFCR")] pub type Hifcr = crate :: Reg < hifcr :: HifcrSpec > ; # [doc = "high interrupt flag clear register"] pub mod hifcr ; # [doc = "Stream cluster: S?CR, S?NDTR, S?M0AR, S?M1AR and S?FCR registers"] pub use self :: st :: St ; # [doc = r"Cluster"] # [doc = "Stream cluster: S?CR, S?NDTR, S?M0AR, S?M1AR and S?FCR registers"] pub mod st ;